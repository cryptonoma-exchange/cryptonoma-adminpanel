import { ExtendedKeys } from '../coin/baseCoin/iface';
/**
 * @param {String} xpub - a base-58 encoded extended public key (BIP32)
 * @return {String} the uncompressed public key in hexadecimal
 */
export declare function xpubToUncompressedPub(xpub: string): string;
/**
 * @param {String} xprv - base58-encoded extended private key (BIP32)
 * @return {String} the hex-encoded raw private key
 */
export declare function xprvToRawPrv(xprv: string): string;
/**
 * @param {String} prv - Private key in hex format to get the extended keys for
 * @return {ExtendedKeys} xprv and xpub in string format
 */
export declare function rawPrvToExtendedKeys(prv: string): ExtendedKeys;
/**
 * Whether the input is a valid BIP32 xpub or not
 */
export declare function isValidXpub(xpub: string): boolean;
/**
 * Whether the input is a valid BIP32 xprv or not
 */
export declare function isValidXprv(xprv: string): boolean;
/**
 * Whether the input is a valid secp256k1 public key
 */
export declare function isValidPub(pub: string): boolean;
/**
 * Whether the input is a valid secp256k1 private key
 */
export declare function isValidPrv(prv: string): boolean;
